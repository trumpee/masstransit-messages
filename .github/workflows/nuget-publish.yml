name: publish-packages
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

defaults:
  run:
    shell: pwsh

jobs:

  create_nuget:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.SECRET_TOKEN }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ secrets.DOTNET_VERSION }}

      - name: Set Git Identity
        run: |
          git config --global user.email "vbardin810@gmail.com"
          git config --global user.name "Vladyslav Bardin"

      - name: Install dotnet-bump global tool
        run: dotnet tool install --global dotnet-bump

      - name: Set version
        run: |
          if ($env:GITHUB_REF -eq "refs/heads/main") {
            # For commits to the main branch, update the minor version
            dotnet bump minor
          } else {
            # For commits within a PR, update the patch version
            dotnet bump patch
          }
          
          # Restore dependencies
          dotnet restore
          
          # Commit the updated version
          git add **/*.csproj
          git commit -m "Update version"
          git push

      - name: Build Solution
        run:  dotnet build ./Trumpee.MassTransit.Messages.sln -c ${{ secrets.BUILD_CONFIGURATION }}

      - run: dotnet pack ./Trumpee.MassTransit.Messages.sln -c ${{ secrets.BUILD_CONFIGURATION }} -o output

      - uses: actions/upload-artifact@v3
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: output/*.nupkg

  deploy:
    runs-on: ubuntu-latest
    needs: [ create_nuget ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: nuget
          path: output

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3

      - name: Publish NuGet to GitHub package registry
        run: dotnet nuget push Trumpee.MassTransit.Messages.nupkg --api-key "${{ secrets.SECRET_TOKEN }}" --source https://nuget.pkg.github.com/bardin08/index.json --skip-duplicate
